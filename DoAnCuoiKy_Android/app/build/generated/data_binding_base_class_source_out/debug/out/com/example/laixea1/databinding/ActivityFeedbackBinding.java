// Generated by view binder compiler. Do not edit!
package com.example.laixea1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RatingBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.laixea1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityFeedbackBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button buttonSubmit;

  @NonNull
  public final EditText editTextNoiDung;

  @NonNull
  public final RatingBar ratingBar;

  @NonNull
  public final RecyclerView recyclerViewFeedbacks;

  private ActivityFeedbackBinding(@NonNull LinearLayout rootView, @NonNull Button buttonSubmit,
      @NonNull EditText editTextNoiDung, @NonNull RatingBar ratingBar,
      @NonNull RecyclerView recyclerViewFeedbacks) {
    this.rootView = rootView;
    this.buttonSubmit = buttonSubmit;
    this.editTextNoiDung = editTextNoiDung;
    this.ratingBar = ratingBar;
    this.recyclerViewFeedbacks = recyclerViewFeedbacks;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityFeedbackBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityFeedbackBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_feedback, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityFeedbackBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonSubmit;
      Button buttonSubmit = ViewBindings.findChildViewById(rootView, id);
      if (buttonSubmit == null) {
        break missingId;
      }

      id = R.id.editTextNoiDung;
      EditText editTextNoiDung = ViewBindings.findChildViewById(rootView, id);
      if (editTextNoiDung == null) {
        break missingId;
      }

      id = R.id.ratingBar;
      RatingBar ratingBar = ViewBindings.findChildViewById(rootView, id);
      if (ratingBar == null) {
        break missingId;
      }

      id = R.id.recyclerViewFeedbacks;
      RecyclerView recyclerViewFeedbacks = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewFeedbacks == null) {
        break missingId;
      }

      return new ActivityFeedbackBinding((LinearLayout) rootView, buttonSubmit, editTextNoiDung,
          ratingBar, recyclerViewFeedbacks);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
