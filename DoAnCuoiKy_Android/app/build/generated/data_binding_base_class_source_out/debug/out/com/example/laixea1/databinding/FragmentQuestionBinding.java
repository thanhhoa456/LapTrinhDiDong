// Generated by view binder compiler. Do not edit!
package com.example.laixea1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.laixea1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentQuestionBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final RecyclerView answerRecyclerView;

  @NonNull
  public final TextView explanationText;

  @NonNull
  public final ImageView questionImage;

  @NonNull
  public final TextView questionText;

  private FragmentQuestionBinding(@NonNull NestedScrollView rootView,
      @NonNull RecyclerView answerRecyclerView, @NonNull TextView explanationText,
      @NonNull ImageView questionImage, @NonNull TextView questionText) {
    this.rootView = rootView;
    this.answerRecyclerView = answerRecyclerView;
    this.explanationText = explanationText;
    this.questionImage = questionImage;
    this.questionText = questionText;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentQuestionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentQuestionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_question, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentQuestionBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.answerRecyclerView;
      RecyclerView answerRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (answerRecyclerView == null) {
        break missingId;
      }

      id = R.id.explanationText;
      TextView explanationText = ViewBindings.findChildViewById(rootView, id);
      if (explanationText == null) {
        break missingId;
      }

      id = R.id.questionImage;
      ImageView questionImage = ViewBindings.findChildViewById(rootView, id);
      if (questionImage == null) {
        break missingId;
      }

      id = R.id.questionText;
      TextView questionText = ViewBindings.findChildViewById(rootView, id);
      if (questionText == null) {
        break missingId;
      }

      return new FragmentQuestionBinding((NestedScrollView) rootView, answerRecyclerView,
          explanationText, questionImage, questionText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
